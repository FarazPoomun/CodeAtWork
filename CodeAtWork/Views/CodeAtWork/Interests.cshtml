
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Interests</title>
    <link href="~/Content/CodeAtWork/tachyons.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
    <link href='https://fonts.googleapis.com/css?family=Antic Didone' rel='stylesheet'>
    <script src='https://kit.fontawesome.com/a076d05399.js'></script>
    <link href="~/Content/CodeAtWork/Interests.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
</head>
<body onload="initializePage()">

    <div class="wrapper">
        <h1 style="font-family: 'Antic Didone';"> What Do You Want To Learn?</h1>
        <p style="font-family: 'Antic Didone';"> Search for and select Interests below. We'll use them to make content recommendations.</p>

        <input type="text" name="search" placeholder="Search...">
        <table id="topics">
            <tr>
                <td>
                    <i class="fas fa-laptop-code learnCode" onclick="toggleCategory('learnCode')"></i>
                </td>
                <td>
                    <i class="fas fa-chart-line learnData" onclick="toggleCategory('learnData')"></i>
                </td>
            </tr>
            <tr id="ToLearnLabels">
                <td class="Categorylabel learnCode selectedTopic" onclick="toggleCategory(this)">
                    Software Development
                </td>
                <td class="Categorylabel learnData" onclick="toggleCategory(this)">
                    Data
                </td>
            </tr>
        </table>

        <p>Most Popular Topics</p>
        <div class="ph3 mt4" id="TopicPills">
            <!-- Will be generated from db-->
        </div>
        <div class="w3-container">
            <p><button class="w3-button w3-round" style="background-color: #0084bd" onclick="UpdateTopics()">Done</button></p>

        </div>
    </div>
</body>
</html>

<script>
    var storedPillsPerCategory = []; // Load per category once

    $(".learnCode").hover(function () {
        $(".learnCode").css("color", "grey");
    }, function () {
        $(".learnCode").css("color", "white");
    });

    $(".learnData").hover(function () {
        $(".learnData").css("color", "grey");
    }, function () {
        $(".learnData").css("color", "white");
        });

    function initializePage() {
        document.getElementById("TopicPills").innerHTML = '@ViewBag.TopicPills';
        storedPillsPerCategory.push({ CategoryName : "Software Development", Pills: '@ViewBag.TopicPills'});
    }

    function subscribeTopic(item) {
        $(item).toggleClass("isNotSubscribed isSubscribed");
    }

    function toggleCategory(item) {
        var elem = item;
        if (typeof item === 'string')
            elem = document.getElementsByClassName("Categorylabel " + item)[0];

        if (!elem.classList.contains('selectedTopic')) {
            var selectedCat = document.getElementsByClassName("selectedTopic")[0];
            $(selectedCat).removeClass("selectedTopic");
            $(elem).addClass("selectedTopic");

            if (!storedPillsPerCategory.map(t => { return t.CategoryName == elem.innerHTML.trim(" ") }).filter(item => item)[0]) {
                storedPillsPerCategory.map(z => {
                    if (z.CategoryName == selectedCat.innerHTML.trim(" "))
                        return z;
                }).filter(item => item)[0].Pills = document.getElementById("TopicPills").innerHTML;

                var ajaxPost = $.post('/CodeAtWork/GetTopicsByCategoryName', { CatergoryName: elem.innerHTML.trim(" ") });
                Promise.all([ajaxPost]).then((results) => {
                    document.getElementById("TopicPills").innerHTML = results[0];
                    storedPillsPerCategory.push({ CategoryName: elem.innerHTML.trim(" "), Pills: results[0] });
                });
            }
            else {
                storedPillsPerCategory.map(z => {
                    if (z.CategoryName == selectedCat.innerHTML.trim(" "))
                        return z;
                }).filter(item => item)[0].Pills = document.getElementById("TopicPills").innerHTML;

                document.getElementById("TopicPills").innerHTML = storedPillsPerCategory.map(t => {
                    if (t.CategoryName == elem.innerHTML.trim(" "))
                        return t.Pills;
                }).filter(item => item)[0];
            }
        }
    }

    function UpdateTopics() {
        var UpdatePills = [];

        var selectedCat = document.getElementsByClassName("selectedTopic")[0];

        storedPillsPerCategory.map(z => {
            if (z.CategoryName == selectedCat.innerHTML.trim(" "))
                return z;
        }).filter(item => item)[0].Pills = document.getElementById("TopicPills").innerHTML;

        storedPillsPerCategory.forEach(z => {
            var tempElem = document.createElement('div');
            tempElem.innerHTML = z.Pills;
            var allTopicsUnderCat = tempElem.getElementsByClassName("br-pill");

            for (t = 0; t < allTopicsUnderCat.length - 1; t++)
            {
                var x = allTopicsUnderCat[t];
                var interestCategoryTopicId = parseInt(x.id.split('_')[1]);
                var obj = { InterestCategoryName: z.CategoryName, InterestCategoryTopicId: interestCategoryTopicId, IsSubscribed: !!x.classList.contains('isSubscribed') };
                UpdatePills.push(obj);
            };
        });

        var ajaxPost = $.post('/CodeAtWork/UpdateInterestTopics', { InterestTopics: UpdatePills });
        Promise.all([ajaxPost]).then((results) => { });
    }

    //To save => compile an objects ids and whether class isSubscribed is true

</script>
