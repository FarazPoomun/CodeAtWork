@using CodeAtWork.Models.Misc;
@{
    Layout = "~/Views/Shared/CodeAtWorkAppLayout.cshtml";
}
<link href='https://fonts.googleapis.com/css?family=Comfortaa' rel='stylesheet'>
<link href="~/Content/CodeAtWorkApp/Paths.css" rel="stylesheet" />

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/CodeAtWorkApp/SharedAppJs.js"></script>
<div id="ChannelsOuterDiv">

    <h2 style="float:left; margin-top:2vh">Paths</h2>

    <div id="ChannelTable">
        <div id="TabId_1" class="selectedChannelSection" onclick="toggleSelectedDiv(this, 1)">
            All
        </div>
        <div id="TabId_2" onclick="toggleSelectedDiv(this, 2)">
            Following
        </div>
        <div>
        </div>
    </div>
    <div style="margin-top: 2rem;">
        <div class="sidenav">
            <a class="selectedTopic" id="PathCategory_All" onclick="FilterPaths(this,null)">All</a>
            <a class="childTopics" id="PathCategory_@((int)CategoryEnum.SoftwareDevelopment)" onclick="FilterPaths(this,@((int)CategoryEnum.SoftwareDevelopment))">Software Development</a>
            <a class="childTopics" id="PathCategory_@((int)CategoryEnum.Data)" onclick="FilterPaths(this,@((int)CategoryEnum.Data))">Data</a>
        </div>

        <div class="mainNextToSideBar" id="PathPanes">
            @ViewBag.Paths
        </div>
    </div>

</div>
<script>

    function OpenAddPathToChannel(pathId) {
        var optAddChannelelem = document.getElementById("OptMenuPathChannel_" + pathId);
        if ($(optAddChannelelem).is(':visible')) {
            $(optAddChannelelem).css("display", "none");
        }
        else {
            var ajaxPost = $.post('/CodeAtWorkApp/GetPathChannels', { pathId: pathId });
            Promise.all([ajaxPost]).then((results) => {
                document.getElementById("PathChannelList_" + pathId).innerHTML = results[0];
                $(optAddChannelelem).css("display", "block");
            });
        }
    }

    function FilterPaths(elem, filterById) {
        var activeElem = document.getElementsByClassName("selectedTopic")[0];
        var selectedPathTabId = document.getElementsByClassName("selectedChannelSection")[0].id.split("_")[1];

        var ajaxPost = $.post('/CodeAtWorkApp/GetPathsPane', { category: filterById, tabId: selectedPathTabId });
        Promise.all([ajaxPost]).then((results) => {
            $(activeElem).removeClass("selectedTopic");
            $(elem).addClass("selectedTopic");
            document.getElementById("PathPanes").innerHTML = results[0];
        });
    }

    function openPathOptMenu(pathId) {
        var OptMenu = document.getElementById("OptMenuPath_" + pathId);
        if ($(OptMenu).is(':visible')) {
            $(OptMenu).css("display", "none");
            var optAddChannelelem = document.getElementById("OptMenuPathChannel_" + pathId);
            if ($(optAddChannelelem).is(':visible')) {
                $(optAddChannelelem).css("display", "none");
            }
        }
        else {
            $(OptMenu).css("display", "block");
        }
    }

    function EnableAddChannelBtn(elem, pathId) {
        var btn = document.getElementById("PathChannelAddBtn_" + pathId);
        var val = elem.value;
        if (!IsNullOrEmpty(val)) {
            $(btn).css("pointer-events", "all");
            $(btn).css("background", "#0084bd");

        }
        else {
            $(btn).css("pointer-events", "none");
            $(btn).css("background", "grey");
        }
    }

    function AddOrRemoveChannelFromPath(elem, channelId, pathId) {
        var ajaxPost = $.post('/CodeAtWorkApp/AddOrRemoveChannelFromPath', { pathId: pathId, channelId: channelId, IsSelected: !elem.classList.contains("channelSelected") });
        Promise.all([ajaxPost]).then((results) => {
            document.getElementById("PathChannelList_" + pathId).innerHTML = results[0];
        });
    }

    function AddNewChannel(pathId) {
        var elem = document.getElementById("ChannelAddBar_" + pathId);
        if (!IsNullOrEmpty(elem.value)) {
            var ajaxPost = $.post('/CodeAtWorkApp/AddAndLinkChannelToPath', { channelName: elem.value, pathId: pathId });
            Promise.all([ajaxPost]).then((results) => {
                document.getElementById("ChannelAddBar_" + pathId).value = "";
                document.getElementById("PathChannelList_" + pathId).innerHTML = results[0];
                var btn = document.getElementById("PathChannelAddBtn_" + pathId);
                $(btn).css("pointer-events", "none");
                $(btn).css("background", "grey");
            });
        }
    }


    function toggleSelectedDiv(elem, tabId) {
        var activeElem = document.getElementsByClassName("selectedTopic")[0].id;
        var filterById = activeElem.split('_')[1];
        if (filterById == 'All') {
            filterById = null;
        }
        var ajaxPost = $.post('/CodeAtWorkApp/GetPathsPane', { category: filterById, tabId: tabId });
        Promise.all([ajaxPost]).then((results) => {
            var existingElem = document.getElementsByClassName("selectedChannelSection")[0];
            $(existingElem).removeClass("selectedChannelSection");
            $(elem).addClass("selectedChannelSection");
            document.getElementById("PathPanes").innerHTML = results[0];
        });
    }

</script>