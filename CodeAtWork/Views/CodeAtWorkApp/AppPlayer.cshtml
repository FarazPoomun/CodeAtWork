
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <link href="~/Content/CodeAtWork/AppPlayer.css" rel="stylesheet" />
    <link href='https://fonts.googleapis.com/css?family=Comfortaa' rel='stylesheet'>
    <script src="https://www.youtube.com/iframe_api"></script>
    <link href="~/Content/CodeAtWorkApp/ProgressStyle.css" rel="stylesheet" />
    <script src="~/Scripts/a076d05399.js"></script>
</head>
<body>
    <div class="sidenav">

        <p class="MainName">Now Playing</p>
        <div>
            <div class="pie" id="videoProgress" data-value="0" style="float:left; margin-left: 5%;"></div>
            <div style="float:right">
                <p class="videoName"> @ViewBag.VideoName</p>
                <p class="AuthorName"> By @ViewBag.By</p>
            </div>
        </div>


    </div>
    <div id="AddContentsModal">
        <div><i class="fas fa-times CloseModal" onclick="CloseAddContentModal()"></i></div>

        <div id="ChannelTable">
            <div class="selectedChannelSection" onclick="toggleSelectedDiv(this, 1)">
                Questionnaire
            </div>
            <div onclick="toggleSelectedDiv(this, 2)">
                Recommended Next Watch
            </div>
            <div>
            </div>
        </div>
        <div id="ModalContainer">
            <div id="RecommendedContainer" style="display:none">
                <div class="ModalScreenshots" id="FilteredVidsGrid">
                </div>
            </div>
            <div id="QuestionnaireContainer">
                <div id="passMarkBanner">
                    Get 80% or over to pass test.
                </div>
                <div id="QWithOptsDivs"></div>
                @*<div class="QDiv">
                    <h3>Number of wings</h3>
                    <div class="QOptions">
                        <div>
                            <input class="TitleCheckbox" onchange="TitleCheck(this)" type="checkbox" id="Title_1" checked>
                            <label for="Title_1">Developer</label>
                        </div>
                        <div>
                            <input class="TitleCheckbox" onchange="TitleCheck(this)" type="checkbox" id="Title_2">
                            <label for="Title_2">IT Professional</label>
                        </div>
                        <div>
                            <input class="TitleCheckbox" onchange="TitleCheck(this)" type="checkbox" id="Title_3">
                            <label for="Title_3">Tester</label>
                        </div>
                        <div>
                            <input class="TitleCheckbox" onchange="TitleCheck(this)" type="checkbox" id="Title_4">
                            <label for="Title_4">Other</label>
                        </div>
                    </div>
                </div>*@
                <button style="width:auto" class="SubmitQBtn">Submit</button>
            </div>
        </div>
    </div>
    <div class="main">
        @ViewBag.VidFrame
    </div>
</body>
</html>
<script>
    var player;

    function toggleSelectedDiv(elem, divId) {

        var QId = "#QuestionnaireContainer";
        var NextId = "#RecommendedContainer";

        var existingElem = document.getElementsByClassName("selectedChannelSection")[0];
        $(existingElem).removeClass("selectedChannelSection");
        $(elem).addClass("selectedChannelSection");

        if (divId == 1) {
            $(QId).css("display", "block");
            $(NextId).css("display", "none");
        }
        else {
            $(NextId).css("display", "block");
            $(QId).css("display", "none");
        }
    }

    //this function is called by the API
    function onYouTubeIframeAPIReady() {
        //creates the player object
        player = new YT.Player('player_iframe');

        //subscribe to events
        player.addEventListener("onReady", "onYouTubePlayerReady");
        player.addEventListener("onStateChange", "onYouTubePlayerStateChange");
    }

    window.onbeforeunload = function () {
        captureTime();
    }

    function onYouTubePlayerReady() {
        var seekTo = parseFloat('@ViewBag.SeekTo');
        setProgress(seekTo, player.getDuration());

        player.seekTo(seekTo);
    }

    function setProgress(passedDuration, fullDuration) {
        var percentage = passedDuration / fullDuration * 100;
        $("#videoProgress").replaceWith('<div class="pie" id="videoProgress" data-value="' + parseInt(percentage) + '" style="float:left; margin-left: 5%;"></div>');
    }


    function onYouTubePlayerStateChange(event) {
        if (event.data == YT.PlayerState.PAUSED) {
            captureTime();
        }
        else if (event.data == YT.PlayerState.ENDED) {
            captureTime(1);

            var questionnairesQs = $.post('/CodeAtWorkApp/GetQuestionnaireForVid', { vidId: '@ViewBag.VideoId' });
            var nextRecommendation = $.post('/CodeAtWorkApp/GetNextRecommendedWatch', { videoId: '@ViewBag.VideoId' });
            Promise.all([questionnairesQs, nextRecommendation]).then((result) => {
                if (result != null && result[0]  && result[0] != "" && result[0] != " ") {
                    document.getElementById("QWithOptsDivs").innerHTML = result[0];
                    $("#AddContentsModal").fadeIn();
                }

                if (result != null && result[1] &&  result[1] != "" && result[1] != " ") {
                    document.getElementById("FilteredVidsGrid").innerHTML = result[1];
                    $("#AddContentsModal").fadeIn();
                }
            });
        }
    }

    function CloseAddContentModal() {
        $("#AddContentsModal").fadeToggle();
    }

    function captureTime(IsFinished = 0) {
        var time = player.getCurrentTime();
        var ajaxPost = $.post('/CodeAtWorkApp/CaptureVideoTime', { videoId: '@ViewBag.VideoId', time: time, IsFinished: IsFinished });
        Promise.all([ajaxPost]);
    }

    function formatTime(time) {
        time = Math.round(time);

        var minutes = Math.floor(time / 60),
            seconds = time - minutes * 60;

        seconds = seconds < 10 ? '0' + seconds : seconds;

        return minutes + ":" + seconds;
    }

     function OpenPlayer(id) {
    var url = '@Url.Action("AppPlayer", "CodeAtWorkApp", new { playById = "__id" })';
    var New = url.replace("__id", id)
    window.open(New, "_blank");
    }

    let percent = 70;
    let counter = 0;
    let intervalID = null;
    $(document).ready(() => {
        intervalID = setInterval(updateNumber, 100);
    });

    // Update the number
    function updateNumber() {
        let step = 4;
        if (counter + step >= percent) {
            counter = percent;
            $('#percentage').html(counter + '%');
            clearInterval(intervalID);
            return;
        }
        counter += step;
        $('#percentage').html(counter + '%');
    }

</script>
